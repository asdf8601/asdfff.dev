---
import BaseLayout from '../layouts/BaseLayout.astro';

const tils = await Astro.glob('./til/*.md');

const sortedTils = tils.sort((a, b) => {
  const dateA = new Date(a.frontmatter.date || 0);
  const dateB = new Date(b.frontmatter.date || 0);
  return dateB.getTime() - dateA.getTime();
});
---

<BaseLayout title="til - wtfm">
  <article>
    <h1>til</h1>
    
    <p>Today I learned. Short notes. No fluff.</p>

    {sortedTils.length > 0 ? (
      sortedTils.map(til => (
        <div class="til-entry" id={til.frontmatter.date}>
          <div class="til-header">
            <time>{til.frontmatter.date}</time>
            <a href={`#${til.frontmatter.date}`} class="til-link" aria-label="Link to this TIL">#</a>
          </div>
          <til.Content />
        </div>
      ))
    ) : (
      <p class="empty-state">No TILs yet. Add markdown files to src/pages/til/</p>
    )}
  </article>
</BaseLayout>

<style>
  article {
    max-width: 100%;
  }

  h1 {
    margin-bottom: var(--spacing-md);
    text-transform: lowercase;
  }

  .til-entry {
    margin-bottom: var(--spacing-lg);
    padding: var(--spacing-sm);
    background-color: var(--color-til-bg);
    scroll-margin-top: var(--spacing-md);
    transition: all 0.2s ease;
    position: relative;
    border: 1px solid var(--color-border);
    clip-path: polygon(
      6px 0,
      100% 0,
      100% calc(100% - 6px),
      calc(100% - 6px) 100%,
      6px 100%,
      0 calc(100% - 6px),
      0 6px
    );
  }

  .til-entry::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 6px;
    background-color: var(--color-border);
    transition: background-color 0.2s ease;
  }

  .til-entry::after {
    content: '';
    position: absolute;
    left: 6px;
    bottom: 0;
    right: 0;
    height: 6px;
    background-color: var(--color-border);
    transition: background-color 0.2s ease;
  }

  .til-entry:target::before,
  .til-entry:target::after {
    background-color: var(--color-accent);
  }

  .til-entry:target {
    background-color: var(--color-til-hover);
    border-color: var(--color-accent);
  }

  .til-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-xs);
  }

  .til-entry time {
    color: var(--color-accent);
    font-size: 0.85rem;
  }

  .til-link {
    opacity: 0;
    transition: opacity 0.2s;
    font-size: 0.85rem;
    padding: 0 0.5rem;
  }

  .til-entry:hover .til-link,
  .til-link:focus {
    opacity: 1;
  }

  .til-entry p {
    margin-bottom: 0;
  }

  .til-entry:hover {
    background-color: var(--color-til-hover);
    border-color: var(--color-accent);
  }

  .til-entry:hover::before,
  .til-entry:hover::after {
    background-color: var(--color-accent);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tilLinks = document.querySelectorAll('.til-link');
    
    tilLinks.forEach(link => {
      link.addEventListener('click', async (e) => {
        e.preventDefault();
        const href = link.getAttribute('href');
        
        if (href) {
          const fullUrl = window.location.origin + window.location.pathname + href;
          
          try {
            await navigator.clipboard.writeText(fullUrl);
          } catch (err) {
            console.error('Failed to copy link:', err);
          }
        }
      });
    });
  });
</script>
